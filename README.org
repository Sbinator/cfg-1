#+TITLE: cfg
#+AUTHOR: Abhinav Tushar

Config scripts and notes in literate style configuration using Org-Babel.

* Basic packages

My current OS is manjaro. Need to setup pacaur from AUR first.

#+BEGIN_SRC bash :exports both :results output
uname -a
#+END_SRC

#+RESULTS:
: Linux euclid-blue 4.9.60-1-MANJARO #1 SMP PREEMPT Thu Nov 2 13:08:20 UTC 2017 x86_64 GNU/Linux

#+BEGIN_SRC bash :exports both :results output
pacaur -S $(grep -vE "^\s*#" ./packages/pacaur | tr "\n" " ")
#+END_SRC

Set ~fish~ as default shell
#+BEGIN_SRC bash :exports both :results output
chsh -s $(which fish)
#+END_SRC

* Stow basics

#+BEGIN_SRC shell :exports both :results output
stow -t ~/ fish
stow -t ~/ git
stow -t ~/ scripts
stow -t ~/ vis
#+END_SRC

* Window manager and related tools

Stow config files.

#+BEGIN_SRC shell :exports both :results output
stow -t ~/ stumpwm
stow -t ~/ polybar
stow -t ~/ dunst
stow -t ~/ rofi
stow -t ~/ compton
stow -t ~/ redshift
stow -t ~/ xmodmap
#+END_SRC

** Stumpwm

Need two sbcl setups. The one from main repo is going to run stumpwm with swank.
The following snip setups that. Needs quicklisp:

#+BEGIN_SRC shell :exports both :results output
./aux-scripts/setup-stump.fish
#+END_SRC

There might be a font loading issue which is fixed by ~(xft:cache-fonts)~.

** Fonts

*** Custom iosevka
#+BEGIN_SRC shell :exports both :results output :dir /sudo::
git clone git@github.com/lepisma/iosevka-lepisma /tmp/iosevka-lepisma
mkdir /usr/share/fonts/iosevka/
mv /tmp/iosevka-lepisma/ttf/patched/*ttf /usr/share/fonts/iosevka/
#+END_SRC

Override medium fonts
#+BEGIN_SRC shell :exports both :results output :dir /sudo::/usr/share/fonts
yes | cp iosevka/iosevka-lepisma-regular.ttf iosevka/iosevka-lepisma-medium.ttf
yes | cp iosevka/iosevka-lepisma-italic.ttf iosevka/iosevka-lepisma-mediumitalic.ttf
yes | cp iosevka/iosevka-lepisma-oblique.ttf iosevka/iosevka-lepisma-mediumoblique.ttf

fc-cache -f
#+END_SRC

*** Et book
#+BEGIN_SRC shell :exports both :results output :dir /sudo::
git clone git@github.com:edwardtufte/et-book /tmp/et-book
mkdir /usr/share/fonts/et-book/
mv /tmp/et-book/et-book/*/*.ttf /usr/share/fonts/et-book/

fc-cache -f
#+END_SRC

*** Other fonts to setup
- All the icons

  Better install this using the Emacs package:
  #+BEGIN_SRC elisp :exports both :results output
  (require 'all-the-icons)
  (all-the-icons-install-fonts)
  #+END_SRC
- SauceCodePro Nerd font
- Fira Code / Fira Sans. Also install Fira code symbol which is used for
  ligatures in Emacs.
- Source Code / Source Sans

* Konsole theming

Copy color scheme:
#+BEGIN_SRC shell :exports both :results output
cp ./konsole/lepisma.profile ~/.local/share/konsole/lepisma.profile
cp ./konsole/nord.colorscheme ~/.local/share/konsole/nord.colorscheme
#+END_SRC

* Language setup

** Common Lisp

Setup roswell and quicklisp.

Symlink ~dune~ to roswell local projects
#+BEGIN_SRC shell :exports both :results output
ln -s ./dune ~/.roswell/local-projects
#+END_SRC

** Python setup

Setup miniconda. Install basic packages
#+BEGIN_SRC shell :exports both :results output
pip install -r ./packages/pip
#+END_SRC

Setup jupyter notebook theme.
#+BEGIN_SRC shell :exports both :results output
jt -t solarizedl -f fira -nf crimsonserif -tf merriserif -tfs 10 -T 
#+END_SRC

Some package config
#+BEGIN_SRC shell :exports both :results output
stow -t ~/ mpm
stow -t ~/ beets
#+END_SRC

** JS

Get nvm and use brigand/fast-nvm-fish. Install some command line tools.

#+BEGIN_SRC shell :exports both :results output
cat ./packages/node | while read -l line
  npm i -g $line
end
#+END_SRC

** R

Setup ~pkr~

#+BEGIN_SRC shell :exports both :results output
wget https://raw.githubusercontent.com/lepisma/pkr/master/pkr
mv pkr ~/bin/
chmod +x ~/bin/pkr
#+END_SRC

** Haskell

#+BEGIN_SRC shell :exports both :results output
stow -t ~/ haskell
#+END_SRC

* Setup email

Stow offlineimap

#+BEGIN_SRC shell :exports both :results output
stow -t ~/ offlineimap
#+END_SRC

Copy over ~authinfo.gpg~

#+BEGIN_SRC shell :exports both :results output
cp ./misc/.authinfo.gpg ~/
#+END_SRC

* Setup hardware

Digimend package from AUR should work fine. Otherwise this snippet should do:

#+BEGIN_SRC shell :exports both :results output
./aux-scripts/setup-huion-driver.fish
#+END_SRC

For keyboard scroll button mapping run this:

#+BEGIN_SRC shell :exports both :results output
./aux-scripts/setup-4000-scroll.fish
#+END_SRC

* Modules

Some modules to blacklist:
- ~i2c_hid~
- ~r8169~
- ~ideapad_laptop~
