;;; -*- mode: lisp -*-

(ql:quickload '(:trivia :serapeum :pod))

(defpackage #:lake.user
  (:use #:cl #:lake #:cl-syntax)
  (:shadowing-import-from #:lake :directory))

(in-package #:lake.user)
(use-syntax :interpol)

(defun create-subcommand-script (cmd)
  "Create script for subcommands."
  (let ((file-name (serapeum:path-join #p"~/bin/" cmd)))
    (with-open-file (fp file-name :direction :output
                                  :if-exists :overwrite
                                  :if-does-not-exist :create)
      (write-string #?"#!/usr/bin/env fish\npod ${cmd} $argv" fp)
      (sh #?"chmod +x ${file-name}"))))

(defun setup-pod ()
  (let ((pod-file (truename #p"./roswell/pod")))
    (sh #?"rm -f ~/bin/pod")
    (sh #?"ln -s ${pod-file} ~/bin/pod")))

(defun setup-cmd (cmd)
  (let ((cmd-file (serapeum:path-join #p"~/bin/" cmd)))
    (with-open-file (fp cmd-file :direction :output
                                 :if-exists :overwrite
                                 :if-does-not-exist :create)
      (write-string #?"#!/usr/bin/env fish\npod ${cmd} $argv" fp)
      (sh #?"chmod +x ${cmd-file}"))))

(task "clean" ()
  (sh #?"rm -f ./roswell/pod"))

(file "./roswell/pod" ()
  (sh #?"ros build ./roswell/pod.ros"))

(task "build" ("./roswell/pod"))

(task "setup" ("./roswell/pod")
  (setup-pod)
  (loop for pair in pod::dispatches
        do (setup-cmd (car pair))))
